"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from pathlib import Path
import environ

import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


env = environ.Env(DEBUG=(bool, True), overwrite=True)
environ.Env.read_env(
    env_file=os.path.join(BASE_DIR, '.env')
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

PROJECT_APPS = [
    'applications.users',
    'applications.travels',
    'applications.billings',
    'applications.base',
]

THIRD_PARTY_APPS = [
    'rest_framework',
    'drf_yasg',
    'djmoney',
    'djmoney.contrib.exchange',
    'debug_toolbar',
]

INSTALLED_APPS = DJANGO_APPS + PROJECT_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "applications.base.middleware.JsonWebTokenMiddleWare",
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

INTERNAL_IPS = [
    '127.0.0.1',
]

LOCAL_DEV_SERVER_HOST = env('LOCAL_DEV_SERVER_HOST')
LOCAL_PRD_SERVER_HOST = env('LOCAL_PRD_SERVER_HOST')
AWS_DEV_SERVER_HOST = env('AWS_DEV_SERVER_HOST')
AWS_PRD_SERVER_HOST = env('AWS_PRD_SERVER_HOST')

CSRF_TRUSTED_ORIGINS = [LOCAL_DEV_SERVER_HOST, LOCAL_PRD_SERVER_HOST, AWS_DEV_SERVER_HOST, AWS_PRD_SERVER_HOST]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# THIRD PARTY CUSTOM
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'applications.base.authentication.JsonWebTokenAuthentication',
    ],
    "EXCEPTION_HANDLER": "applications.base.error_handler.server_error_handler",
}

AUTH_USER_MODEL = 'users.User'
EXCHANGE_BACKEND = 'djmoney.contrib.exchange.backends.FixerBackend'

log_path = env('LOG_PATH')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'root': {
        'level': 'DEBUG',
        'handlers': ['file']
    },
    'formatters': {
        'verbose': {
            'format': (
                '%(asctime)s %(levelname)s %(name)s %(message)s'
                ' [PID:%(process)d:%(threadName)s]')
        },
        'simple': {
            'format': '%(levelname)s %(message)s'}
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'}
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True
        },
        'django.server': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True
        },
        'django.db.backends': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True
        },
        'unicommerce': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True
        },
        'error': {
            'handlers': ['error'],
            'level': 'ERROR',
            'propagate': True
        }
    }
}